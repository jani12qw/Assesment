name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger on merge to master branch
    paths:
      - 'src/**'
      
env:
  ECR_REPOSITORY: my-ecr-repo

permissions:
  contents: read
  id-token: write

jobs:
  Docker_build_push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.0
      with:
        token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ECR_PUSH_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}  # Use commit SHA as the image tag
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      working-directory: src
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update deployment image with new commit SHA
      if: github.event_name == 'push'
      run: |
        git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
        git config --global user.email "username@users.noreply.github.com"
        git fetch origin release
        git checkout release
        cd src/manifests
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment.yaml
        git add .
        git commit -m "Update image to $IMAGE_TAG in deployment.yaml"
        git push origin release
